<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="classId" xml:lang="en-us">
<title>Air Flight - conformance rules</title>
<shortdesc id="shortdesc"></shortdesc>
<prolog id="prolog">
</prolog>
<body>
<section id="description">
<p>This class represents an example &amp;apos;Act&amp;apos; class declaration as indicated by the                   stereotype  Act . The HL7 Version Reference Information Model specifies the                   attributes of any classes intended to as &amp;apos;a record of something that is being                   done, has been done, can be done, or is intended or requested to be done. For                   example, in this case an Act class is used to document an air flight.</p>
</section>
<ol id="conformance">
<li>Contains exactly one [1..1] <tt><b>flightSchedule</b></tt>, where its type is <xref href="../FlightSchedule.dita">Flight Schedule</xref>
<ul><li>This ActRelationship describes the relationship between FlightSchedule and                   AirFlight. ActRelationship is a directed association between a source Act and a                   target Act (in this case it is a bi-directional association) as specified by the                   HL7 V3 RIM. The relationships associated with an Act are considered properties of                   the source act object. This means that the author of an Act-instance is also                   considered the author of all of the act relationships that have this Act as their                   source, (though not necessarily of the target Acts of those relationships). There                   are no exceptions to this rule. The meaning and purpose of an ActRelationship is                   specified in the ActRelationship.typeCode attribute. Every ActRelationship                   instance is like an arrow with a point (headed to the target) and a butt (coming                   from the source). The functions that source and target Acts play in that                   association are defined for each ActRelationship type differently. For instance,                   in a composition relationship, the source is the composite and the targets are the                   components. In a reason-relationship the source is any Act and the target is the                   reason or indication for the source-Act. </li></ul><ul><li> This represents an association of an AirFlight to a FlightSchedule. The                     association will appear as a property of a class (AirFlight) and named for the                     far end of the association.</li></ul></li>
<li>Contains zero or one [0..1] <tt><b>effectiveTime</b></tt> with data type <xref href="../PointInTime.dita">Point In Time</xref>
<ul><li>This is an example attribute declaration. As seen here the attribute name is                     &amp;apos;effectiveTime&amp;apos; and the type of that attribute is &amp;apos;PointInTime&amp;apos;. PointInTime is                     a concrete/implementable class defined in the FHIM Datatypes package. The Class                     notation identifies that PointInTime is a UML class. FHIM domain models reuse                     the data types defined the HL7 Abstract Data Type specification. The stereotype                      TS  specifies that the PointInTime class uses the extensions required for an                     HL7 TS abstract data type. The [0..1] notation specifies the                     cardinality/multiplicity allowed for the effectiveTime attribute by specifying                     the minimum and maximum number of occurrences for this attribute (e.g. minimum 0                     and maximum 1 in this case). To specify that an attribute or association can                     repeat any number of time, the * notation is used for example [0..*] would                     specify that a an attribute may be omitted or it may be repeated without a                     predefined limit. The Default is a cardinality is [1..1] if not otherwise                     specified.</li></ul></li>
</ol>
<ol id="aggregate">
<li>Contains zero or one [0..1] <tt><b>effectiveTime</b></tt> with data type <xref href="../PointInTime.dita">Point In Time</xref>
<ul><li>This is an example attribute declaration. As seen here the attribute name is                     &amp;apos;effectiveTime&amp;apos; and the type of that attribute is &amp;apos;PointInTime&amp;apos;. PointInTime is                     a concrete/implementable class defined in the FHIM Datatypes package. The Class                     notation identifies that PointInTime is a UML class. FHIM domain models reuse                     the data types defined the HL7 Abstract Data Type specification. The stereotype                      TS  specifies that the PointInTime class uses the extensions required for an                     HL7 TS abstract data type. The [0..1] notation specifies the                     cardinality/multiplicity allowed for the effectiveTime attribute by specifying                     the minimum and maximum number of occurrences for this attribute (e.g. minimum 0                     and maximum 1 in this case). To specify that an attribute or association can                     repeat any number of time, the * notation is used for example [0..*] would                     specify that a an attribute may be omitted or it may be repeated without a                     predefined limit. The Default is a cardinality is [1..1] if not otherwise                     specified.</li></ul></li>
<li>Contains exactly one [1..1] <tt><b>flightSchedule</b></tt>, where its type is <xref href="../FlightSchedule.dita">Flight Schedule</xref>
<ul><li>This ActRelationship describes the relationship between FlightSchedule and                   AirFlight. ActRelationship is a directed association between a source Act and a                   target Act (in this case it is a bi-directional association) as specified by the                   HL7 V3 RIM. The relationships associated with an Act are considered properties of                   the source act object. This means that the author of an Act-instance is also                   considered the author of all of the act relationships that have this Act as their                   source, (though not necessarily of the target Acts of those relationships). There                   are no exceptions to this rule. The meaning and purpose of an ActRelationship is                   specified in the ActRelationship.typeCode attribute. Every ActRelationship                   instance is like an arrow with a point (headed to the target) and a butt (coming                   from the source). The functions that source and target Acts play in that                   association are defined for each ActRelationship type differently. For instance,                   in a composition relationship, the source is the composite and the targets are the                   components. In a reason-relationship the source is any Act and the target is the                   reason or indication for the source-Act. </li></ul><ul><li> This represents an association of an AirFlight to a FlightSchedule. The                     association will appear as a property of a class (AirFlight) and named for the                     far end of the association.</li></ul></li>
</ol>
<codeblock id="example"><![CDATA[]]></codeblock>
<section id="changes">
</section>
<p><ph id="classformalname">Air Flight</ph></p>
</body>
</topic>
